        -:    0:Source:final.cpp
        -:    0:Graph:final.gcno
        -:    0:Data:final.gcda
        -:    0:Runs:1
        -:    0:Programs:1
        -:    1:#include <iostream>
        -:    2:#include <fstream>
        -:    3://Modificaciones de testing
        -:    4:#include <iomanip>
        -:    5:
        -:    6:using namespace std;
        -:    7:
        -:    8:struct llamadas
        -:    9:{
        -:   10:  int horas, minutos, segundos, duracion;
        -:   11:  int cant, codigo;
        -:   12:  llamadas *next;
        -:   13:};
        -:   14:
        -:   15:llamadas *AgregarNodo (llamadas * f);
        -:   16:void BorrarLista (llamadas * f);
        -:   17:void MostrarLista (llamadas * f);
        -:   18:llamadas *LeerArchivo (int &error, int &lineas);
        -:   19:void CantTiemp (llamadas * f, int lineas, int &cant1, int &cant2, int &cant3,
        -:   20:		float &tiemp1, float &tiemp2, float &tiemp3);
        -:   21:void Monto (llamadas * f, int lineas, float &m1, float &m2, float &m3,
        -:   22:	    float tiemp1, float tiemp2, float tiemp3);
        -:   23:
        -:   24:
        -:   25:int
function main called 1 returned 100% blocks executed 91%
        1:   26:main (void)
        -:   27:{
        -:   28:
        1:   29:  int error = 0, i = 0, cantidad = 0;
        1:   30:  llamadas *datos = NULL;
        1:   31:  int cantidad1 = 0, cantidad2 = 0, cantidad3 = 0;
        -:   32:  float tiempo1, tiempo2, tiempo3;
        1:   33:  float monto1 = 0.0, monto2 = 0.0, monto3 = 0.0;
        -:   34:
        1:   35:  datos = LeerArchivo (error, cantidad);
call    0 returned 100%
branch  1 taken 100% (fallthrough)
branch  2 taken 0% (throw)
        1:   36:  if (error)
branch  0 taken 0% (fallthrough)
branch  1 taken 100%
        -:   37:    {
    #####:   38:      cerr << "Problemas con el archivo" << endl;
call    0 never executed
branch  1 never executed
branch  2 never executed
call    3 never executed
branch  4 never executed
branch  5 never executed
        -:   39:    }
        -:   40:  else
        -:   41:    {
        1:   42:      cout << "Se leyeron: " << cantidad << " lineas." << endl;
call    0 returned 100%
branch  1 taken 100% (fallthrough)
branch  2 taken 0% (throw)
call    3 returned 100%
branch  4 taken 100% (fallthrough)
branch  5 taken 0% (throw)
call    6 returned 100%
branch  7 taken 100% (fallthrough)
branch  8 taken 0% (throw)
call    9 returned 100%
branch 10 taken 100% (fallthrough)
branch 11 taken 0% (throw)
        1:   43:      CantTiemp (datos, cantidad, cantidad1, cantidad2, cantidad3, tiempo1,
call    0 returned 100%
        -:   44:		 tiempo2, tiempo3);
        -:   45:
        1:   46:      cout << "Cantidad de llamadas '1': " << cantidad1 << "\tduracion: " <<
call    0 returned 100%
branch  1 taken 100% (fallthrough)
branch  2 taken 0% (throw)
call    3 returned 100%
branch  4 taken 100% (fallthrough)
branch  5 taken 0% (throw)
call    6 returned 100%
branch  7 taken 100% (fallthrough)
branch  8 taken 0% (throw)
call    9 returned 100%
branch 10 taken 100% (fallthrough)
branch 11 taken 0% (throw)
        -:   47:	tiempo1;
        1:   48:      cout << "\tCantidad de llamadas '2': " << cantidad2 << "\tduracion: " <<
call    0 returned 100%
branch  1 taken 100% (fallthrough)
branch  2 taken 0% (throw)
call    3 returned 100%
branch  4 taken 100% (fallthrough)
branch  5 taken 0% (throw)
call    6 returned 100%
branch  7 taken 100% (fallthrough)
branch  8 taken 0% (throw)
call    9 returned 100%
branch 10 taken 100% (fallthrough)
branch 11 taken 0% (throw)
        -:   49:	tiempo2;
        1:   50:      cout << "\tCantidad de llamadas '3': " << cantidad3 << "\tduracion: " <<
call    0 returned 100%
branch  1 taken 100% (fallthrough)
branch  2 taken 0% (throw)
call    3 returned 100%
branch  4 taken 100% (fallthrough)
branch  5 taken 0% (throw)
call    6 returned 100%
branch  7 taken 100% (fallthrough)
branch  8 taken 0% (throw)
        1:   51:	tiempo3 << endl;
call    0 returned 100%
branch  1 taken 100% (fallthrough)
branch  2 taken 0% (throw)
call    3 returned 100%
branch  4 taken 100% (fallthrough)
branch  5 taken 0% (throw)
        -:   52:
        1:   53:      Monto (datos, cantidad, monto1, monto2, monto3, tiempo1, tiempo2,
call    0 returned 100%
        -:   54:	     tiempo3);
        -:   55:
        -:   56:      // cout  << monto1 << endl;
        -:   57:      // cout << "Resultados" <<endl;
        1:   58:      cout << "Monto total del tipo '1':$ " << monto1;
call    0 returned 100%
branch  1 taken 100% (fallthrough)
branch  2 taken 0% (throw)
call    3 returned 100%
branch  4 taken 100% (fallthrough)
branch  5 taken 0% (throw)
        1:   59:      cout << "\tMonto total del tipo '2':$ " << monto2;
call    0 returned 100%
branch  1 taken 100% (fallthrough)
branch  2 taken 0% (throw)
call    3 returned 100%
branch  4 taken 100% (fallthrough)
branch  5 taken 0% (throw)
        1:   60:      cout << "\tMonto total del tipo '3':$ " << monto3 << endl;
call    0 returned 100%
branch  1 taken 100% (fallthrough)
branch  2 taken 0% (throw)
call    3 returned 100%
branch  4 taken 100% (fallthrough)
branch  5 taken 0% (throw)
call    6 returned 100%
branch  7 taken 100% (fallthrough)
branch  8 taken 0% (throw)
        -:   61:
        -:   62:
        -:   63:
        1:   64:      return error;
        -:   65:
        -:   66:    }
    #####:   67:}
        -:   68:
        -:   69:llamadas *
function _Z11AgregarNodoP8llamadas called 1000 returned 100% blocks executed 100%
     1000:   70:AgregarNodo (llamadas * f)
        -:   71:{
     1000:   72:  llamadas *ult = NULL, *aux = NULL;
        -:   73:
     1000:   74:  aux = new llamadas;
call    0 returned 100%
     1000:   75:  if (aux != NULL)
branch  0 taken 100% (fallthrough)
branch  1 taken 0%
        -:   76:    {
     1000:   77:      aux->next = NULL;
     1000:   78:      if (f != NULL)
branch  0 taken 99% (fallthrough)
branch  1 taken 1%
        -:   79:	{
   999999:   80:	  while (f != NULL)
branch  0 taken 99% (fallthrough)
branch  1 taken 1%
        -:   81:	    {
   499500:   82:	      ult = f;
   499500:   83:	      f = f->next;
        -:   84:	    }
      999:   85:	  ult->next = aux;
        -:   86:	}
        -:   87:    }
        -:   88:
        -:   89:
     1000:   90:  return aux;
        -:   91:}
        -:   92:
        -:   93:void
function _Z11BorrarListaP8llamadas called 0 returned 0% blocks executed 0%
    #####:   94:BorrarLista (llamadas * f)
        -:   95:{
    #####:   96:  llamadas *aux = NULL;
        -:   97:
    #####:   98:  while (f != NULL)
branch  0 never executed
branch  1 never executed
        -:   99:    {
    #####:  100:      aux = f;
    #####:  101:      f = f->next;
    #####:  102:      delete aux;
call    0 never executed
        -:  103:    }
    #####:  104:}
        -:  105:
        -:  106:void
function _Z12MostrarListaP8llamadas called 0 returned 0% blocks executed 0%
    #####:  107:MostrarLista (llamadas * f)
        -:  108:{
    #####:  109:  while (f != NULL)
branch  0 never executed
branch  1 never executed
        -:  110:    {
    #####:  111:      cout << f->horas << " " << f->minutos << " " << f->segundos << " " <<
call    0 never executed
call    1 never executed
call    2 never executed
call    3 never executed
    #####:  112:	" " << f->duracion << " " << f->codigo << endl;
call    0 never executed
call    1 never executed
call    2 never executed
call    3 never executed
call    4 never executed
call    5 never executed
call    6 never executed
    #####:  113:      f = f->next;
        -:  114:    }
    #####:  115:}
        -:  116:
        -:  117:llamadas *
function _Z11LeerArchivoRiS_ called 1 returned 100% blocks executed 88%
        1:  118:LeerArchivo (int &error, int &lineas)
        -:  119:{
        1:  120:  int i = 0, tmp = 0;
        -:  121:  char nombre[30];
        2:  122:  ifstream entrada;
call    0 returned 100%
branch  1 taken 100% (fallthrough)
branch  2 taken 0% (throw)
call    3 returned 100%
call    4 never executed
        1:  123:  llamadas *pri = NULL, *aux = NULL;
        -:  124:
        1:  125:  cout << "Ingrese el nombre del archivo: " << endl;
call    0 returned 100%
branch  1 taken 100% (fallthrough)
branch  2 taken 0% (throw)
call    3 returned 100%
branch  4 taken 100% (fallthrough)
branch  5 taken 0% (throw)
        1:  126:  cin >> nombre;
call    0 returned 100%
branch  1 taken 100% (fallthrough)
branch  2 taken 0% (throw)
        -:  127:
        1:  128:  entrada.open (nombre);
call    0 returned 100%
branch  1 taken 100% (fallthrough)
branch  2 taken 0% (throw)
        1:  129:  if (entrada.fail ())
call    0 returned 100%
branch  1 taken 100% (fallthrough)
branch  2 taken 0% (throw)
branch  3 taken 0% (fallthrough)
branch  4 taken 100%
        -:  130:    {
    #####:  131:      error = 1;
        -:  132:    }
        -:  133:  else
        -:  134:    {
     2001:  135:      while ((!entrada.eof ()) && (!error))
call    0 returned 100%
branch  1 taken 100% (fallthrough)
branch  2 taken 0% (throw)
branch  3 taken 99% (fallthrough)
branch  4 taken 1%
branch  5 taken 100% (fallthrough)
branch  6 taken 0%
branch  7 taken 99% (fallthrough)
branch  8 taken 1%
        -:  136:	{
     1000:  137:	  aux = AgregarNodo (pri);
call    0 returned 100%
branch  1 taken 100% (fallthrough)
branch  2 taken 0% (throw)
     1000:  138:	  if (aux == NULL)
branch  0 taken 0% (fallthrough)
branch  1 taken 100%
        -:  139:	    {
    #####:  140:	      error = 2;
        -:  141:	    }
        -:  142:	  else
        -:  143:	    {
     1000:  144:	      if (pri == NULL)
branch  0 taken 1% (fallthrough)
branch  1 taken 99%
        -:  145:		{
        1:  146:		  pri = aux;
        -:  147:		}
     1000:  148:	      lineas++;
        -:  149:	      // aux->horas = tmp;
     1000:  150:	      entrada >> aux->horas >> aux->minutos >> aux->segundos >> aux->
call    0 returned 100%
branch  1 taken 100% (fallthrough)
branch  2 taken 0% (throw)
call    3 returned 100%
branch  4 taken 100% (fallthrough)
branch  5 taken 0% (throw)
call    6 returned 100%
branch  7 taken 100% (fallthrough)
branch  8 taken 0% (throw)
     1000:  151:		duracion >> aux->codigo;
call    0 returned 100%
branch  1 taken 100% (fallthrough)
branch  2 taken 0% (throw)
call    3 returned 100%
branch  4 taken 100% (fallthrough)
branch  5 taken 0% (throw)
        -:  152:	      // string a;
        -:  153:	      // entrada >> a;
        -:  154:	      // cout << "Todo pai "<< aux->horas << endl;
        -:  155:	    }
        -:  156:	}
        1:  157:      entrada.close ();
call    0 returned 100%
branch  1 taken 100% (fallthrough)
branch  2 taken 0% (throw)
        -:  158:    }
        -:  159:
        2:  160:  return pri;
        -:  161:}
        -:  162:
        -:  163:
        -:  164:void
function _Z9CantTiempP8llamadasiRiS1_S1_RfS2_S2_ called 1 returned 100% blocks executed 100%
        1:  165:CantTiemp (llamadas * f, int lineas, int &cant1, int &cant2, int &cant3,
        -:  166:	   float &tiemp1, float &tiemp2, float &tiemp3)
        -:  167:{
        -:  168:  // int i = 0, total = 50 * lineas;=
        -:  169:  // llamadas *aux = f;
        1:  170:  int i = 0, total = lineas;
     1001:  171:  for (i = 0; i < total; i++)
branch  0 taken 99% (fallthrough)
branch  1 taken 1%
        -:  172:    {
     1000:  173:      if (f->codigo == 1)
branch  0 taken 35% (fallthrough)
branch  1 taken 65%
        -:  174:	{
      347:  175:	  cant1++;
      347:  176:	  tiemp1 += f->duracion;
        -:  177:	}
      653:  178:      else if (f->codigo == 2)
branch  0 taken 52% (fallthrough)
branch  1 taken 48%
        -:  179:	{
      338:  180:	  cant2++;
      338:  181:	  tiemp2 += f->duracion;
        -:  182:	}
        -:  183:      else
        -:  184:	{
      315:  185:	  cant3++;
      315:  186:	  tiemp3 += f->duracion;
        -:  187:	}
        -:  188:
     1000:  189:      f = f->next;
        -:  190:    }
        1:  191:}
        -:  192:
        -:  193:void
function _Z5MontoP8llamadasiRfS1_S1_fff called 1 returned 100% blocks executed 100%
        1:  194:Monto (llamadas * f, int lineas, float &m1, float &m2, float &m3,
        -:  195:       float tiemp1, float tiemp2, float tiemp3)
        -:  196:{
        1:  197:  int i = 0, total = lineas;
        1:  198:  m1 = 0.010 * tiemp1;
        1:  199:  m2 = 0.025 * tiemp2;
        1:  200:  m3 = 0.045 * tiemp3;
function _GLOBAL__sub_I_main called 1 returned 100% blocks executed 100%
function _Z41__static_initialization_and_destruction_0ii called 1 returned 100% blocks executed 100%
        4:  201:}
call    0 returned 100%
branch  1 taken 100% (fallthrough)
branch  2 taken 0%
branch  3 taken 100% (fallthrough)
branch  4 taken 0%
